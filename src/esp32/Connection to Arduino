#include <Wire.h>

// 定义I2C地址Define I2C address
#define ARDUINO_I2C_ADDRESS 0x09
#define ESP32_I2C_ADDRESS 0x08

// 发送数据数组The data
float dataToSend[4] = {5.5, 6.6, 7.7, 8.8}; // 示例数据Sample Data
float receivedData[4];

// 用于定时的变量Variables for time
unsigned long previousMillis = 0;
const long interval = 250; // 每250毫秒发送一次Send the data once every 250 ms

void setup() {
  Wire.begin(ESP32_I2C_ADDRESS); // 加入I2C总线，作为从设备，地址为0x08 join the I2C through address 0x08
  Wire.onReceive(receiveEvent); // 注册接收事件define the recieve event
  Serial.begin(2000000); // 设置串行通信波特率为2000000 set the baud rate of 2000000
}

void loop() {
  unsigned long currentMillis = millis();

  if (currentMillis - previousMillis >= interval) {
    previousMillis = currentMillis;
    
    // 发送数据到Arduino
    Wire.beginTransmission(ARDUINO_I2C_ADDRESS); // 开始I2C传输到Arduino Start the I2C transmission to Arduino
    for (int i = 0; i < 4; i++) {
      Wire.write((byte*)&dataToSend[i], sizeof(float)); // 发送每个浮点数 send every floats
    }
    Wire.endTransmission(); // 停止I2C传输 stop the I2C transmission
  }
}

void receiveEvent(int howMany) {//从Arduino 接收数据recieve data from Arduino
  for (int i = 0; i < 4; i++) {
    Wire.readBytes((char*)&receivedData[i], sizeof(float)); // 读取每个浮点数 read floats from ESP32
  }

  // 打印接收到的数据到串行监视器print the recieved data to the serial
  Serial.println("Received data:");
  for (int i = 0; i < 4; i++) {
    Serial.println(receivedData[i]);
  }
}
